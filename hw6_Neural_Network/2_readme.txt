1. Structure: this folder contains 2 files - 0_data_processing.py is for data processing. Since I've already processed the data, there is not need to run this file again. It is just there for referencing purpose
2. Training the neural network: To train and test the neural network, run 1_neural_network.py. The code for training and testing has already been provided. Users can also test individual inputs following the examples at line 149.
3. Libraries to install: The execution of 0_data_processing.py requires the installation of pandas and sklearn. The execution of 1_neural_network.py requires the installation of pandas, numpy, seaborn, sklearn, and matplotlib. You can google these libraries to learn how to install them.
4. Dataset handling: The original dataset is first standardized and had its classes turned into numbers - setosa = 2, versicolor = 1, and virginica = 0
5. Dataset sampling: The training, validation, and testing sets of the model contains data size in the porportion of 6:2:2. The data for each set is randomly sampled from the original dataset without repetition, and each set is shuffled. The proportion of each category in each dataset is the same as the proportion in the original dataset.
6. Data Encoding: one-hot encoding of flowers used in training: (0,0,1): Iris-setosa. (0,1,0): Iris-versicolor. (1,0,0): Iris-virginica
7. Neural network structure: The neural network has one hidden layer. Users can adjust the epochs, learning rate, and dimension of the weights when creating the nn class.
8. Activation function: The activation functions used in the neural network are sigmoid functions. The loss function calculates mean squared loss.
9. Note on user input: To ensure prediction accuracy, any dataset used for testing should be first standardized, same is true for user inputs.